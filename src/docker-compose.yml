version: '3.9'

networks:
  ibdb-network:
    driver: bridge

services:
  frontend:
    container_name: ibdb-frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - ibdb-network

  books:
    container_name: ibdb-books
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Ibdb.Books/Dockerfile
    environment:
      - CONNECTIONSTRINGS__BOOKS=Server=books_db;Port=5432;Database=books;User Id=books;Password=books
      - CONNECTIONSTRINGS__EVENTSTORE=Server=books_db;Port=5432;Database=books;User Id=books;Password=books
      - CONNECTIONSTRINGS__OUTBOX=Server=books_db;Port=5432;Database=books;User Id=books;Password=books
      - CONNECTIONSTRINGS__RABBITMQ=host=rabbitmq;username=rabbitmq;password=rabbitmq;publisherConfirms=true
    networks:
      - ibdb-network
    depends_on:
      - books_db
      - rabbitmq

  reviews:
    container_name: ibdb-reviews
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Ibdb.Reviews/Dockerfile
    environment:
      - CONNECTIONSTRINGS__REVIEWS=Server=reviews_db;Port=5432;Database=reviews;User Id=reviews;Password=reviews
      - CONNECTIONSTRINGS__EVENTSTORE=Server=reviews_db;Port=5432;Database=reviews;User Id=reviews;Password=reviews
      - CONNECTIONSTRINGS__OUTBOX=Server=reviews_db;Port=5432;Database=reviews;User Id=reviews;Password=reviews
      - CONNECTIONSTRINGS__RABBITMQ=host=rabbitmq;username=rabbitmq;password=rabbitmq;publisherConfirms=true
    networks:
      - ibdb-network
    depends_on:
      - reviews_db
      - rabbitmq

  notifications:
    container_name: ibdb-notifications
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Ibdb.Notifications/Dockerfile
    environment:
      - CONNECTIONSTRINGS__RABBITMQ=host=rabbitmq;username=rabbitmq;password=rabbitmq;publisherConfirms=true
    networks:
      - ibdb-network
    depends_on:
      - rabbitmq

  migrator:
   container_name: ibdb-migrator
   restart: "no"
   build:
     context: ./backend
     dockerfile: Ibdb.Shared.Migrator/Dockerfile
   environment:
     - CONNECTIONSTRINGS__BOOKS=Server=books_db;Port=5432;Database=books;User Id=books;Password=books
     - CONNECTIONSTRINGS__REVIEWS=Server=reviews_db;Port=5432;Database=reviews;User Id=reviews;Password=reviews
     - CONNECTIONSTRINGS__EVENTSTORE_BOOKS=Server=books_db;Port=5432;Database=books;User Id=books;Password=books
     - CONNECTIONSTRINGS__EVENTSTORE_REVIEWS=Server=reviews_db;Port=5432;Database=reviews;User Id=reviews;Password=reviews
     - CONNECTIONSTRINGS__OUTBOX_BOOKS=Server=books_db;Port=5432;Database=books;User Id=books;Password=books
     - CONNECTIONSTRINGS__OUTBOX_REVIEWS=Server=reviews_db;Port=5432;Database=reviews;User Id=reviews;Password=reviews
   networks:
     - ibdb-network
   depends_on:
     - books_db

  books_db:
    container_name: ibdb-books-db
    image: postgres:14
    restart: unless-stopped
    networks:
      - ibdb-network
    environment:
      - POSTGRES_DB=books
      - POSTGRES_USER=books
      - POSTGRES_PASSWORD=books
    volumes:
      - ./data/postgres/books:/var/lib/postgresql/data

  reviews_db:
    container_name: ibdb-reviews-db
    image: postgres:14
    restart: unless-stopped
    networks:
      - ibdb-network
    environment:
      - POSTGRES_DB=reviews
      - POSTGRES_USER=reviews
      - POSTGRES_PASSWORD=reviews
    volumes:
      - ./data/postgres/reviews:/var/lib/postgresql/data

  rabbitmq:
    container_name: ibdb-rabbitmq
    restart: unless-stopped
    image: rabbitmq:3
    networks:
      - ibdb-network
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq

  nginx:
    container_name: ibdb-nginx
    image: nginx:stable-alpine
    networks:
      - ibdb-network
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - books
      - reviews
      - notifications